

name: build-sa-container
description: composite action to build containers based upon a manifest

inputs:
  PROJECT_ID:
    description: Project ID of google project
    required: true
  GKE_CLUSTER:
    description: Name of cluster
    default: gke-informatica-containers
  GKE_ZONE:
    description: Name of zone where cluster exists
    default: us-central1-c
  DEPLOYMENT_NAME:
    description: Name of deployment. Additionally references manifest files
    required: true
  NAMESPACE:
    description: Namespace to deploy apps to
    default: secure-agent-test
  RUNTIME_ENV:
    description: Name of informatica runtime environment to deploy to

runs:
  using: "composite"
  steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            UID=1001
            GID=1000
            RUNTIME_ENV=${{ env.RUNTIME_ENV }}
          tags: jtpirate/${{ env.DEPLOYMENT_NAME }}:latest

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/493022562702/locations/global/workloadIdentityPools/secure-agent-id-pool/providers/sa-provider'
          service_account: 'gh-deployer@secure-agent-container.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

       # Get the GKE credentials so we can deploy to the cluster
      - name: Login to GKE cluster
        shell: sh
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      
      # Deploy sample image to the GKE cluster
      - name: Deploy
        shell: sh
        run: |-
          kubectl apply -f ./kube-manifests/${DEPLOYMENT_NAME}-manifest.yml
          kubectl rollout status --namespace=${NAMESPACE} deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide