

name: build-sa-container
description: composite action to build containers based upon a manifest

inputs:
  PROJECT_ID:
    description: Project ID of google project
    required: true
  RUNTIME_ENV:
    description: Name of informatica runtime environment to deploy to
    required: true
  DEPLOYMENT_NAME:
    description: Name of deployment. Additionally references manifest files
    required: true
  DOCKER_USERNAME:
    description: Username to push to docker container
    required: true
  DOCKER_TOKEN:
    description: API token to docker container
    required: true
  GKE_CLUSTER:
    description: Name of cluster
    default: gke-informatica-containers
  GKE_ZONE:
    description: Name of zone where cluster exists
    default: us-central1-c
  NAMESPACE:
    description: Namespace to deploy apps to
    default: secure-agent-test
  GOOGLE_WORKLOAD_PROVIDER:
    description: Location of google workload Federation
    default: projects/481897807876/locations/global/workloadIdentityPools/secure-agent-id-pool/providers/sa-provider-gh
  GOOGLE_SERVICE_ACCOUNT:
    description: Service account name for Workload Federation
    default: srv-diteam@gcp-product-spec-iics-cdie.iam.gserviceaccount.com


runs:
  using: "composite"
  steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.DOCKER_USERNAME }}
          password: ${{ inputs.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            UID=1001
            GID=1000
            RUNTIME_ENV=${{ inputs.RUNTIME_ENV }}
          tags: jtpirate/${{ inputs.DEPLOYMENT_NAME }}:latest

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Install gke auth plugin'
        shell: sh
        run: 'gcloud components install gke-gcloud-auth-plugin'
      
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: "${{ inputs.GOOGLE_WORKLOAD_PROVIDER }}"
          service_account: "${{ inputs.GOOGLE_SERVICE_ACCOUNT }}"

       # Get the GKE credentials so we can deploy to the cluster
      - name: Login to GKE cluster
        shell: sh
        env: 
          USE_GKE_GCLOUD_AUTH_PLUGIN: 'True'
        run: |-
          gcloud container clusters get-credentials "${{ inputs.GKE_CLUSTER }}" --zone "${{ inputs.GKE_ZONE }}"
      
      # Deploy sample image to the GKE cluster
      - name: Deploy
        shell: sh
        env: 
          USE_GKE_GCLOUD_AUTH_PLUGIN: 'True'
        run: |-
          kubectl apply -f ./kube-manifests/${{ inputs.DEPLOYMENT_NAME }}-manifest.yml
          kubectl rollout status --namespace=${{ inputs.NAMESPACE }} deployment/${{ inputs.DEPLOYMENT_NAME }}
          kubectl get services -o wide